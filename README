The following info is needed to configure the memory variables used by the scripts and play the game. And since I tend to forget things, I'll write everything down.

FLAGS
-----
protector
function: "protector"       //used to spawn a protector creep at the marked position
spawn: [spawn ID]           //ID of the spawn expected to construct the protector
volume #protectors          //number of protectors planned for this flag

narrowSource
function: "narrowSource"    //is used to mark energy sources for stationary harvesters. Without such flags, no stationary harvesters will spawn
spawn: [spawn ID]           //ID of the spawn in the narrow source's room

remoteController
function: "remoteController"    //used to reserve / claim uncontrolled room
spawn: [spawn ID]               //ID of the spawn expected to construct the claimer
claim: [0 / 1]                  // if 1: controller will be claimed if possible, otherwise only reserved
supply:                         //Room name where supply creeps should be ordered

remoteSource (1x / spawn)
function: "remoteSource"    //used to harvest room from an uncontrolled room
spawn: [spawn ID]           //ID of the spawn expected to construct the remote harvester
volume: #harvesters         //number of harvesters planned for this resource

demolish (1x / spawn)
function: "demolish"        //demolish either one object or all in a room
spawn: [spawn ID]           //ID of the spawn expected to construct the demolisher
target: [object/room]       //Either demolish object at flag position or all objects in the room
volume: #demolishers         //number of demolishers planned

SPAWN
-------
role: [0 / 1 / x]           // 0: spawn acts as slave spawn and does not use own ID for identification of the produced creeps / x: inactive spawn

ROOM
----
hostiles                // # of hostile creeps is saved here
terminaltransfer        // Terminal transfer order in the following format: [TARGETROOM]:[AMOUNT]:[RESOURCESTRING]:[COMMENT] e.g. W45S19:800:Z:Test transfer
                        // Transfer is automatically deleted from room memory after execution
